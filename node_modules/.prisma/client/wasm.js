
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  role: 'role',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  nameRw: 'nameRw',
  slug: 'slug',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ArticleScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  content: 'content',
  excerpt: 'excerpt',
  imageUrl: 'imageUrl',
  authorId: 'authorId',
  categoryId: 'categoryId',
  isBreaking: 'isBreaking',
  isFeatured: 'isFeatured',
  status: 'status',
  views: 'views',
  readTime: 'readTime',
  tags: 'tags',
  publishedAt: 'publishedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  imageUrl: 'imageUrl',
  linkUrl: 'linkUrl',
  position: 'position',
  isActive: 'isActive',
  clicks: 'clicks',
  impressions: 'impressions',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  content: 'content',
  authorName: 'authorName',
  authorEmail: 'authorEmail',
  articleId: 'articleId',
  isApproved: 'isApproved',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NewsletterSubscriberScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  isActive: 'isActive',
  subscribedAt: 'subscribedAt'
};

exports.Prisma.AdvertisementScalarFieldEnum = {
  id: 'id',
  title: 'title',
  fullDescription: 'fullDescription',
  company: 'company',
  category: 'category',
  imageUrl: 'imageUrl',
  location: 'location',
  deadline: 'deadline',
  views: 'views',
  applicants: 'applicants',
  contactPhone: 'contactPhone',
  contactEmail: 'contactEmail',
  contactWebsite: 'contactWebsite',
  contactAddress: 'contactAddress',
  requirements: 'requirements',
  benefits: 'benefits',
  isActive: 'isActive',
  isFeatured: 'isFeatured',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AuctionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  fullDescription: 'fullDescription',
  currentBid: 'currentBid',
  startingBid: 'startingBid',
  minIncrement: 'minIncrement',
  endTime: 'endTime',
  status: 'status',
  images: 'images',
  category: 'category',
  condition: 'condition',
  location: 'location',
  shipping: 'shipping',
  returns: 'returns',
  sellerId: 'sellerId',
  totalBids: 'totalBids',
  watchers: 'watchers',
  isFeatured: 'isFeatured',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BidScalarFieldEnum = {
  id: 'id',
  auctionId: 'auctionId',
  userId: 'userId',
  amount: 'amount',
  bidTime: 'bidTime'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  admin: 'admin',
  editor: 'editor',
  author: 'author'
};

exports.ArticleStatus = exports.$Enums.ArticleStatus = {
  draft: 'draft',
  published: 'published',
  archived: 'archived'
};

exports.AuctionStatus = exports.$Enums.AuctionStatus = {
  active: 'active',
  ended: 'ended',
  cancelled: 'cancelled'
};

exports.Prisma.ModelName = {
  User: 'User',
  Category: 'Category',
  Article: 'Article',
  Ad: 'Ad',
  Comment: 'Comment',
  NewsletterSubscriber: 'NewsletterSubscriber',
  Advertisement: 'Advertisement',
  Auction: 'Auction',
  Bid: 'Bid'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Albert\\OneDrive\\Desktop\\impara-news\\Backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Albert\\OneDrive\\Desktop\\impara-news\\Backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Prisma Schema for Impara News - PostgreSQL Version\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ============================================\n// USERS TABLE\n// ============================================\nmodel User {\n  id           Int      @id @default(autoincrement())\n  email        String   @unique\n  passwordHash String   @map(\"password_hash\")\n  role         UserRole @default(admin)\n  name         String?\n  createdAt    DateTime @default(now()) @map(\"created_at\")\n  updatedAt    DateTime @updatedAt @map(\"updated_at\")\n\n  articles Article[]\n  ads      Ad[]\n  auctions Auction[]\n  bids     Bid[]\n\n  @@map(\"users\")\n}\n\nenum UserRole {\n  admin\n  editor\n  author\n}\n\n// ============================================\n// CATEGORIES TABLE\n// ============================================\nmodel Category {\n  id          Int      @id @default(autoincrement())\n  name        String   @unique\n  nameRw      String   @map(\"name_rw\")\n  slug        String   @unique\n  description String?\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  articles Article[]\n\n  @@map(\"categories\")\n}\n\n// ============================================\n// ARTICLES TABLE\n// ============================================\nenum ArticleStatus {\n  draft\n  published\n  archived\n}\n\nmodel Article {\n  id          Int           @id @default(autoincrement())\n  title       String\n  slug        String        @unique\n  content     String\n  excerpt     String?\n  imageUrl    String?       @map(\"image_url\")\n  authorId    Int           @map(\"author_id\")\n  categoryId  Int           @map(\"category_id\")\n  isBreaking  Boolean       @default(false) @map(\"is_breaking\")\n  isFeatured  Boolean       @default(false) @map(\"is_featured\")\n  status      ArticleStatus @default(draft)\n  views       Int           @default(0)\n  readTime    String?       @map(\"read_time\")\n  tags        String?\n  publishedAt DateTime?     @map(\"published_at\")\n  createdAt   DateTime      @default(now()) @map(\"created_at\")\n  updatedAt   DateTime      @updatedAt @map(\"updated_at\")\n\n  author   User      @relation(fields: [authorId], references: [id], onDelete: Cascade)\n  category Category  @relation(fields: [categoryId], references: [id], onDelete: Restrict)\n  comments Comment[]\n\n  @@map(\"articles\")\n}\n\n// ============================================\n// ADS TABLE (Banner Ads)\n// ============================================\nmodel Ad {\n  id          Int      @id @default(autoincrement())\n  title       String\n  description String?\n  imageUrl    String   @map(\"image_url\")\n  linkUrl     String?  @map(\"link_url\")\n  position    String   @default(\"banner\")\n  isActive    Boolean  @default(true) @map(\"is_active\")\n  clicks      Int      @default(0)\n  impressions Int      @default(0)\n  createdBy   Int      @map(\"created_by\")\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  creator User @relation(fields: [createdBy], references: [id], onDelete: Cascade)\n\n  @@map(\"ads\")\n}\n\n// ============================================\n// COMMENTS TABLE\n// ============================================\nmodel Comment {\n  id          Int      @id @default(autoincrement())\n  content     String\n  authorName  String   @map(\"author_name\")\n  authorEmail String   @map(\"author_email\")\n  articleId   Int      @map(\"article_id\")\n  isApproved  Boolean  @default(false) @map(\"is_approved\")\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  article Article @relation(fields: [articleId], references: [id], onDelete: Cascade)\n\n  @@map(\"comments\")\n}\n\n// ============================================\n// NEWSLETTER SUBSCRIBERS TABLE\n// ============================================\nmodel NewsletterSubscriber {\n  id           Int      @id @default(autoincrement())\n  email        String   @unique\n  name         String?\n  isActive     Boolean  @default(true) @map(\"is_active\")\n  subscribedAt DateTime @default(now()) @map(\"subscribed_at\")\n\n  @@map(\"newsletter_subscribers\")\n}\n\n// ============================================\n// ADVERTISEMENTS TABLE (Job/Opportunity Ads)\n// ============================================\nmodel Advertisement {\n  id              Int       @id @default(autoincrement())\n  title           String\n  fullDescription String    @map(\"full_description\")\n  company         String\n  category        String\n  imageUrl        String?   @map(\"image_url\")\n  location        String\n  deadline        DateTime?\n  views           Int       @default(0)\n  applicants      Int       @default(0)\n  contactPhone    String?   @map(\"contact_phone\")\n  contactEmail    String?   @map(\"contact_email\")\n  contactWebsite  String?   @map(\"contact_website\")\n  contactAddress  String?   @map(\"contact_address\")\n  requirements    String?\n  benefits        String?\n  isActive        Boolean   @default(true) @map(\"is_active\")\n  isFeatured      Boolean   @default(false) @map(\"is_featured\")\n  createdAt       DateTime  @default(now()) @map(\"created_at\")\n  updatedAt       DateTime  @updatedAt @map(\"updated_at\")\n\n  @@map(\"advertisements\")\n}\n\n// ============================================\n// AUCTIONS TABLE\n// ============================================\nenum AuctionStatus {\n  active\n  ended\n  cancelled\n}\n\nmodel Auction {\n  id              Int           @id @default(autoincrement())\n  title           String\n  fullDescription String        @map(\"full_description\")\n  currentBid      Int           @default(0) @map(\"current_bid\")\n  startingBid     Int           @map(\"starting_bid\")\n  minIncrement    Int           @map(\"min_increment\")\n  endTime         DateTime      @map(\"end_time\")\n  status          AuctionStatus @default(active)\n  images          String?\n  category        String\n  condition       String\n  location        String\n  shipping        String?\n  returns         String?\n  sellerId        Int           @map(\"seller_id\")\n  totalBids       Int           @default(0) @map(\"total_bids\")\n  watchers        Int           @default(0)\n  isFeatured      Boolean       @default(false) @map(\"is_featured\")\n  createdAt       DateTime      @default(now()) @map(\"created_at\")\n  updatedAt       DateTime      @updatedAt @map(\"updated_at\")\n\n  seller User  @relation(fields: [sellerId], references: [id], onDelete: Cascade)\n  bids   Bid[]\n\n  @@map(\"auctions\")\n}\n\n// ============================================\n// BIDS TABLE\n// ============================================\nmodel Bid {\n  id        Int      @id @default(autoincrement())\n  auctionId Int      @map(\"auction_id\")\n  userId    Int      @map(\"user_id\")\n  amount    Int\n  bidTime   DateTime @default(now()) @map(\"bid_time\")\n\n  auction Auction @relation(fields: [auctionId], references: [id], onDelete: Cascade)\n  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"bids\")\n}\n",
  "inlineSchemaHash": "d573c799a9261aee159a53fd1119d81fb0d8579c2a2ed40d023b782c06d42a6d",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"articles\",\"kind\":\"object\",\"type\":\"Article\",\"relationName\":\"ArticleToUser\"},{\"name\":\"ads\",\"kind\":\"object\",\"type\":\"Ad\",\"relationName\":\"AdToUser\"},{\"name\":\"auctions\",\"kind\":\"object\",\"type\":\"Auction\",\"relationName\":\"AuctionToUser\"},{\"name\":\"bids\",\"kind\":\"object\",\"type\":\"Bid\",\"relationName\":\"BidToUser\"}],\"dbName\":\"users\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nameRw\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"name_rw\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"articles\",\"kind\":\"object\",\"type\":\"Article\",\"relationName\":\"ArticleToCategory\"}],\"dbName\":\"categories\"},\"Article\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"excerpt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"image_url\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"author_id\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"category_id\"},{\"name\":\"isBreaking\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_breaking\"},{\"name\":\"isFeatured\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_featured\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ArticleStatus\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"readTime\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"read_time\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"published_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ArticleToUser\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"ArticleToCategory\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"ArticleToComment\"}],\"dbName\":\"articles\"},\"Ad\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"image_url\"},{\"name\":\"linkUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"link_url\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"clicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impressions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"created_by\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdToUser\"}],\"dbName\":\"ads\"},\"Comment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"author_name\"},{\"name\":\"authorEmail\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"author_email\"},{\"name\":\"articleId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"article_id\"},{\"name\":\"isApproved\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_approved\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"article\",\"kind\":\"object\",\"type\":\"Article\",\"relationName\":\"ArticleToComment\"}],\"dbName\":\"comments\"},\"NewsletterSubscriber\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"subscribedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"subscribed_at\"}],\"dbName\":\"newsletter_subscribers\"},\"Advertisement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullDescription\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"full_description\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"image_url\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"applicants\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"contactPhone\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"contact_phone\"},{\"name\":\"contactEmail\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"contact_email\"},{\"name\":\"contactWebsite\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"contact_website\"},{\"name\":\"contactAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"contact_address\"},{\"name\":\"requirements\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"benefits\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"isFeatured\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_featured\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"advertisements\"},\"Auction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullDescription\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"full_description\"},{\"name\":\"currentBid\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"current_bid\"},{\"name\":\"startingBid\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"starting_bid\"},{\"name\":\"minIncrement\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"min_increment\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_time\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AuctionStatus\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"condition\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shipping\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"returns\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sellerId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"seller_id\"},{\"name\":\"totalBids\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_bids\"},{\"name\":\"watchers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isFeatured\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_featured\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"seller\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuctionToUser\"},{\"name\":\"bids\",\"kind\":\"object\",\"type\":\"Bid\",\"relationName\":\"AuctionToBid\"}],\"dbName\":\"auctions\"},\"Bid\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"auctionId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"auction_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"user_id\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bidTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"bid_time\"},{\"name\":\"auction\",\"kind\":\"object\",\"type\":\"Auction\",\"relationName\":\"AuctionToBid\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BidToUser\"}],\"dbName\":\"bids\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

